# Generated by Django 3.1.7 on 2021-08-25 17:17

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Electricoutagebrtivlweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofweek', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], default='Monday', max_length=5000)),
                ('numberofhourswithnoelectricityperday', models.IntegerField(default=0)),
                ('numberofhoursgeneratorwasonperday', models.IntegerField(default=0)),
                ('litresoffueladdedtogeneratorperday', models.IntegerField(default=0)),
                ('numberofhoursmachineswasnotbeingusedduetopowercutperday', models.IntegerField(default=0)),
                ('totaltestsdoneperdayusinggenerator', models.IntegerField(default=0)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Electricoutagebrtiweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofweek', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], default='Monday', max_length=5000)),
                ('numberofhourswithnoelectricityperday', models.IntegerField(default=0)),
                ('numberofhoursgeneratorwasonperday', models.IntegerField(default=0)),
                ('litresoffueladdedtogeneratorperday', models.IntegerField(default=0)),
                ('numberofhoursmachineswasnotbeingusedduetopowercutperday', models.IntegerField(default=0)),
                ('totaltestsdoneperdayusinggenerator', models.IntegerField(default=0)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='generalbrticovid19',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofweek', models.CharField(choices=[('NMRL', 'NMRL'), ('Mpilo', 'Mpilo'), ('BRIDH', 'BRIDH'), ('NTBRL', 'NTBRL'), ('Gweru', 'Gweru'), ('Chinhoyi', 'Chinhoyi'), ('Masvingo', 'Masvingo'), ('eid', 'eid'), ('Victoria Falls', 'Victoria Falls'), ('Bindura', 'Bindura'), ('Kadoma', 'Kadoma'), ('Marondera', 'Marondera'), ('St Lukes', 'St Lukes'), ('Gwanda', 'Gwanda'), ('Total', 'Total')], default='NMRL', max_length=5000)),
                ('generalcommentsregardingtestingandchallengesfacedbythelaboratory', models.CharField(default='.', max_length=5000, null=True)),
                ('numberofstaffwhotestedpositivetocovid19atvllab', models.IntegerField(default=0)),
                ('numberofstaffwhohavebeenvaccinated', models.IntegerField(default=0)),
                ('Comments', models.TextField(default='null', max_length=5000, null=True)),
                ('Requesttobrtifromthelaboratory', models.CharField(default='.', max_length=5000, null=True)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Generalcovid19',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofweek', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], default='Monday', max_length=5000)),
                ('generalcommentsregardingtestingandchallengesfacedbythelaboratory', models.CharField(default='.', max_length=5000, null=True)),
                ('numberofstaffwhotestedpositivetocovid19atvllab', models.IntegerField(default=0)),
                ('numberOfStaffwhotestedpositivetocovid19athubs', models.IntegerField(default=0)),
                ('numberofstaffwhohavebeenvaccinated', models.IntegerField(default=0)),
                ('Comments', models.TextField(default='null', max_length=5000, null=True)),
                ('Requesttobrtifromthelaboratory', models.CharField(default='.', max_length=5000, null=True)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='machinedowntimereagentstockouttoolbrticovid19',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofweek', models.CharField(choices=[('NMRL', 'NMRL'), ('Mpilo', 'Mpilo'), ('BRIDH', 'BRIDH'), ('NTBRL', 'NTBRL'), ('Gweru', 'Gweru'), ('Chinhoyi', 'Chinhoyi'), ('Masvingo', 'Masvingo'), ('eid', 'eid'), ('Victoria Falls', 'Victoria Falls'), ('Bindura', 'Bindura'), ('Kadoma', 'Kadoma'), ('Marondera', 'Marondera'), ('St Lukes', 'St Lukes'), ('Gwanda', 'Gwanda'), ('Total', 'Total')], default='NMRL', max_length=5000)),
                ('numberofmachinebreakdownsabbott', models.IntegerField(default=0)),
                ('numberofmachinebreakdownsbmx', models.IntegerField(default=0)),
                ('numberofmachinebreakdownsgenexpert', models.IntegerField(default=0)),
                ('numberofmachinebreakdownsquantstudio3', models.IntegerField(default=0)),
                ('numberofmachinebreakdownshologicpanther', models.IntegerField(default=0)),
                ('numberofmachinebreakdownscomments', models.TextField()),
                ('machinedowntimedaysabbott', models.IntegerField(default=0)),
                ('machinedowntimedaysbmx', models.IntegerField(default=0)),
                ('machinedowntimedaysgenexpert', models.IntegerField(default=0)),
                ('machinedowntimedaysquantstudio3', models.IntegerField(default=0)),
                ('machinedowntimedayshologicpanther', models.IntegerField(default=0)),
                ('machinedowntimedayscomments', models.TextField()),
                ('reagentstockoutabbort', models.IntegerField(default=0)),
                ('reagentstockoutbms', models.IntegerField(default=0)),
                ('reagentstockoutgenexpert', models.IntegerField(default=0)),
                ('reagentstockoutquantstudio3', models.IntegerField(default=0)),
                ('reagentstockouthologicpanther', models.IntegerField(default=0)),
                ('reagentstockoutcomments', models.TextField()),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='reasonsforfailurebrtivleid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofweek', models.CharField(choices=[('NMRL', 'NMRL'), ('Mpilo', 'Mpilo'), ('BRIDH', 'BRIDH'), ('NTBRL', 'NTBRL'), ('Gweru', 'Gweru'), ('Chinhoyi', 'Chinhoyi'), ('Masvingo', 'Masvingo'), ('eid', 'eid'), ('Victoria Falls', 'Victoria Falls'), ('Bindura', 'Bindura'), ('Kadoma', 'Kadoma'), ('Marondera', 'Marondera'), ('St Lukes', 'St Lukes'), ('Gwanda', 'Gwanda'), ('Total', 'Total')], default='NMRL', max_length=5000)),
                ('rocheplasmanumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('rocheplasmanumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('rocheplasmanumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('rocheplasmanumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('rocheplasmanumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('rocheplasmanumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('rocheplasmanumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('rochedqacheckplasma', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('rochedqacheckdbs', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('bmxdqacheckplasma', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('bmxdqacheckdbs', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('abbottdqacheckplasma', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('abbottdqacheckdbs', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('hologicpantherdqacheckplasma', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('hologicpantherdqacheckdbs', models.IntegerField(default=0)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Reasonsforfailurebrtivlweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofweek', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], default='Monday', max_length=5000)),
                ('rocheplasmanumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('rocheplasmanumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('rocheplasmanumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('rocheplasmanumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('rocheplasmanumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('rocheplasmanumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('rocheplasmanumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('rochedqacheckplasma', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('rochedqacheckdbs', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('bmxdqacheckplasma', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('bmxdqacheckdbs', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('abbottdqacheckplasma', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('abbottdqacheckdbs', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('hologicpantherdqacheckplasma', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('hologicpantherdqacheckdbs', models.IntegerField(default=0)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Reasonsforfailurebrtiweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofweek', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], default='Monday', max_length=5000)),
                ('rocheplasmanumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('rocheplasmanumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('rocheplasmanumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('rocheplasmanumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('rocheplasmanumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('rocheplasmanumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('rocheplasmanumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('rochedqacheckplasma', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('rochedbsnumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('rochedqacheckdbs', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('bmxplasmanumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('bmxdqacheckplasma', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('bmxdbsnumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('bmxdqacheckdbs', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('abbottplasmanumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('abbottdqacheckplasma', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('abbottdbsnumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('abbottdqacheckdbs', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('hologicpantherplasmanumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('hologicpantherdqacheckplasma', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetosamplequalityissues', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetoreagentqualityissues', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetoduetoqcfailure', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetopowerfailure', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetomechanicalfailure', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetoprocessingerror', models.IntegerField(default=0)),
                ('hologicpantherdbsnumberoffailedtestsduetoother', models.IntegerField(default=0)),
                ('hologicpantherdqacheckdbs', models.IntegerField(default=0)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='specimensreceivedbrticovid19',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofweek', models.CharField(choices=[('NMRL', 'NMRL'), ('Mpilo', 'Mpilo'), ('BRIDH', 'BRIDH'), ('NTBRL', 'NTBRL'), ('Gweru', 'Gweru'), ('Chinhoyi', 'Chinhoyi'), ('Masvingo', 'Masvingo'), ('eid', 'eid'), ('Victoria Falls', 'Victoria Falls'), ('Bindura', 'Bindura'), ('Kadoma', 'Kadoma'), ('Marondera', 'Marondera'), ('St Lukes', 'St Lukes'), ('Gwanda', 'Gwanda'), ('Total', 'Total')], default='NMRL', max_length=5000)),
                ('samplescarriedoverpreviousweeks', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweeknasopharyngealswab', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweeknasalswab', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweekoropharyngealswab', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweekmidturbinateswab', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweeksputum', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweekwholebloodorplasmaorserum', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweekother', models.IntegerField(default=0)),
                ('samplesrejectedcurrentweek', models.IntegerField(default=0)),
                ('totalsamplesreceivedcurrentweek', models.IntegerField(default=0)),
                ('numberofsamplesenteredintolims', models.IntegerField(default=0)),
                ('totalsamplescurrentpluscarryover', models.IntegerField(default=0)),
                ('samplesreferred', models.IntegerField(default=0)),
                ('samplesreferredtoname', models.IntegerField(default=0)),
                ('rejectionratecurrentweek', models.DecimalField(decimal_places=5, max_digits=5)),
                ('numberofresultsprintedlims', models.IntegerField(default=0)),
                ('totalresultsdispatchedbylab', models.IntegerField(default=0)),
                ('comment', models.CharField(default='.', max_length=5000, null=True)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='specimensreceivedbrtivleid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofweek', models.CharField(choices=[('NMRL', 'NMRL'), ('Mpilo', 'Mpilo'), ('BRIDH', 'BRIDH'), ('NTBRL', 'NTBRL'), ('Gweru', 'Gweru'), ('Chinhoyi', 'Chinhoyi'), ('Masvingo', 'Masvingo'), ('eid', 'eid'), ('Victoria Falls', 'Victoria Falls'), ('Bindura', 'Bindura'), ('Kadoma', 'Kadoma'), ('Marondera', 'Marondera'), ('St Lukes', 'St Lukes'), ('Gwanda', 'Gwanda'), ('Total', 'Total')], default='NMRL', max_length=5000)),
                ('samplescarriedoverpreviousweeknevertestedplasma', models.IntegerField(default=0)),
                ('samplescarriedoverpreviousweeknevertesteddbs', models.IntegerField(default=0)),
                ('samplescarriedoverpreviouspreviousfailedsamplesplasma', models.IntegerField(default=0)),
                ('samplescarriedoverpreviouspreviousfailedsamplesdbs', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweekplasma', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweekdbs', models.IntegerField(default=0)),
                ('samplesrejectedcurrentweekplasma', models.IntegerField(default=0)),
                ('samplesrejectedcurrentweekdbs', models.IntegerField(default=0)),
                ('totalsamplesreceivedcurrentweekplasma', models.IntegerField(default=0)),
                ('totalsamplesreceivedcurrentweekdbs', models.IntegerField(default=0)),
                ('numberofsamplesenteredintolimsondayofarrivalplasma', models.IntegerField(default=0)),
                ('numberofsamplesenteredintolimsondayofarrivaldbs', models.IntegerField(default=0)),
                ('numberofsamplesenteredintolimsafterdayofarrivalplasma', models.IntegerField(default=0)),
                ('numberofsamplesenteredintolimsafterdayofarrivaldbs', models.IntegerField(default=0)),
                ('numberofhourslimswasfunctional', models.IntegerField(default=0)),
                ('totalsamplescurrentandcarryoverplasma', models.IntegerField(default=0)),
                ('totalsamplescurrentandcarryoverdbs', models.IntegerField(default=0)),
                ('samplesrefferedplasma', models.IntegerField(default=0)),
                ('samplesreffereddbs', models.IntegerField(default=0)),
                ('labsamplesrefferedto', models.IntegerField(default=0)),
                ('percentagerejectionrateplasma', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentagerejectionratedbs', models.DecimalField(decimal_places=5, max_digits=5)),
                ('numberofresultsprintedfromlimsplasma', models.IntegerField(default=0)),
                ('numberofresultsprintedfromlimsdbs', models.IntegerField(default=0)),
                ('totalresultsdispatchedbylabplasma', models.IntegerField(default=0)),
                ('totalresultsdispatchedbylabdbs', models.IntegerField(default=0)),
                ('totalresultsdispatchedbylabviasmsplasma', models.IntegerField(default=0)),
                ('totalresultsdispatchedbylabviasmsdbs', models.IntegerField(default=0)),
                ('reasonsforrejectionssamplequalitycompromisedplasma', models.IntegerField(default=0)),
                ('reasonsforrejectionssamplequalitycompromiseddbs', models.IntegerField(default=0)),
                ('reasons6', models.IntegerField(default=0)),
                ('reasons5', models.IntegerField(default=0)),
                ('reasons2', models.IntegerField(default=0)),
                ('reasons1', models.IntegerField(default=0)),
                ('reasons4', models.IntegerField(default=0)),
                ('reason3', models.IntegerField(default=0)),
                ('reasonsforrejectionssamplequalitycompromisedqdacheckplasma', models.IntegerField(default=0)),
                ('reasonsforrejectionssamplequalitycompromisedqdacheckdbs', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalreagentorkitstockoutplasma', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalreagentorkitstockoutdbs', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalinstrumentmechanicalfailureplasma', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalinstrumentmechanicalfailuredbs', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalinsufficientinstrumentcapacityplasma', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalinsufficientinstrumentcapacitydbs', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalinsufficienthrcapacityplasma', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalinsufficienthrcapacitydbs', models.IntegerField(default=0)),
                ('reasonsforsamplerefferaldqacheckplasma', models.IntegerField(default=0)),
                ('reasonsforsamplerefferaldqacheckdbs', models.IntegerField(default=0)),
                ('comments', models.TextField(max_length=5000, null=True, verbose_name='Please input any comments regarding sample carryover, samples received, samples rejected, rejection rate, TAT, machine breakdowns & down time, reagent stock out if applicable')),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Specimensreceivedbrtiweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofweek', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], default='Monday', max_length=5000)),
                ('samplescarriedoverpreviousweeksnevertestedplasma', models.IntegerField(default=0)),
                ('samplescarriedoverpreviousweeksnevertesteddbs', models.IntegerField(default=0)),
                ('samplescarriedoverpreviousfailedsamplesplasma', models.IntegerField(default=0)),
                ('samplescarriedoverpreviousfailedsamplesdbs', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweekplasma', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweekdbs', models.IntegerField(default=0)),
                ('samplesrejectedcurrentweekplasma', models.IntegerField(default=0)),
                ('samplesrejectedcurrentweekdbs', models.IntegerField(default=0)),
                ('totalsamplesreceivedcurrentweekplasma', models.IntegerField(default=0)),
                ('totalsamplesreceivedcurrentweekdbs', models.IntegerField(default=0)),
                ('numberofsamplesenteredintolimsondayofarrivalplasma', models.IntegerField(default=0)),
                ('numberofsamplesenteredintolimsondayofarrivaldbs', models.IntegerField(default=0)),
                ('numberofsamplesenteredintolimsafterdayofarrivalplasma', models.IntegerField(default=0)),
                ('numberofsamplesenteredintolimsafterdayofarrivaldbs', models.IntegerField(default=0)),
                ('numberofhourslimswasfunctional', models.IntegerField(default=0)),
                ('totalsamplescurrentpluscarryoverplasma', models.IntegerField(default=0)),
                ('totalsamplescurrentpluscarryoverdbs', models.IntegerField(default=0)),
                ('samplesrefferedplasma', models.IntegerField(default=0)),
                ('samplesreffereddbs', models.IntegerField(default=0)),
                ('labsamplesrefferedto', models.IntegerField(default=0)),
                ('percentagerejectionrateplasma', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentagerejectionratedbs', models.DecimalField(decimal_places=5, max_digits=5)),
                ('numberofresultsprintedfromlimsplasma', models.IntegerField(default=0)),
                ('numberofresultsprintedfromlimsdbs', models.IntegerField(default=0)),
                ('totalresultsdispatchedbylabplasma', models.IntegerField(default=0)),
                ('totalresultsdispatchedbylabdbs', models.IntegerField(default=0)),
                ('totalresultsdispatchedbylabviasmsplasma', models.IntegerField(default=0)),
                ('totalresultsdispatchedbylabviasmsdbs', models.IntegerField(default=0)),
                ('reasonsforrejectionssamplequalitycompromisedplasma', models.IntegerField(default=0)),
                ('reasonsforrejectionssamplequalitycompromiseddbs', models.IntegerField(default=0)),
                ('reasons6', models.IntegerField(default=0)),
                ('reasons5', models.IntegerField(default=0)),
                ('reasons2', models.IntegerField(default=0)),
                ('reasons1', models.IntegerField(default=0)),
                ('reasons4', models.IntegerField(default=0)),
                ('reasons3', models.IntegerField(default=0)),
                ('reasonsforrejectionssamplequalitycompromisedqdacheckplasma', models.IntegerField(default=0)),
                ('reasonsforrejectionssamplequalitycompromisedqdacheckdbs', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalreagentorkitstockoutplasma', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalreagentorkitstockoutdbs', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalinstrumentmechanicalfailureplasma', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalinstrumentmechanicalfailuredbs', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalinsufficientinstrumentcapacityplasma', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalinsufficientinstrumentcapacitydbs', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalinsufficienthrcapacityplasma', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalinsufficienthrcapacitydbs', models.IntegerField(default=0)),
                ('reasonsforsamplerefferaldqacheckplasma', models.IntegerField(default=0)),
                ('reasonsforsamplerefferaldqacheckdbs', models.IntegerField(default=0)),
                ('comments', models.TextField(max_length=5000, null=True, verbose_name='Please input any comments regarding sample carryover, samples received, samples rejected, rejection rate, TAT, machine breakdowns & down time, reagent stock out if applicable')),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Specimensreceivedcovid19',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofweek', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], default='Monday', max_length=5000)),
                ('samplescarriedoverpreviousweeks', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweeknasopharyngealswab', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweeknasalswab', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweekoropharyngealswab', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweekmidturbinateswab', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweeksputum', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweekwholebloodorplasmaorserum', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweekother', models.IntegerField(default=0)),
                ('samplesrejectedcurrentweek', models.IntegerField(default=0)),
                ('totalsamplesreceivedcurrentweek', models.IntegerField(default=0)),
                ('numberofsamplesenteredintolims', models.IntegerField(default=0)),
                ('totalsamplescurrentpluscarryover', models.IntegerField(default=0)),
                ('samplesreferred', models.IntegerField(default=0)),
                ('rejectionratecurrentweek', models.DecimalField(decimal_places=5, max_digits=5)),
                ('numberofresultsprintedlims', models.IntegerField(default=0)),
                ('totalresultsdispatchedbylab', models.IntegerField(default=0)),
                ('comment', models.CharField(default='.', max_length=5000, null=True)),
                ('samplesReferredtoName', models.CharField(default='null', max_length=5000)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Specimensrecievedbrtivlweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofweek', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], default='Monday', max_length=5000)),
                ('samplescarriedoverpreviousweeknevertestedplasma', models.IntegerField(default=0)),
                ('samplescarriedoverpreviousweeknevertesteddbs', models.IntegerField(default=0)),
                ('samplescarriedoverpreviouspreviousfailedsamplesplasma', models.IntegerField(default=0)),
                ('samplescarriedoverpreviouspreviousfailedsamplesdbs', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweekplasma', models.IntegerField(default=0)),
                ('samplesreceivedcurrentweekdbs', models.IntegerField(default=0)),
                ('samplesrejectedcurrentweekplasma', models.IntegerField(default=0)),
                ('samplesrejectedcurrentweekdbs', models.IntegerField(default=0)),
                ('totalsamplesreceivedcurrentweekplasma', models.IntegerField(default=0)),
                ('totalsamplesreceivedcurrentweekdbs', models.IntegerField(default=0)),
                ('numberofsamplesenteredintolimsondayofarrivalplasma', models.IntegerField(default=0)),
                ('numberofsamplesenteredintolimsondayofarrivaldbs', models.IntegerField(default=0)),
                ('numberofsamplesenteredintolimsafterdayofarrivalplasma', models.IntegerField(default=0)),
                ('numberofsamplesenteredintolimsafterdayofarrivaldbs', models.IntegerField(default=0)),
                ('numberofhourslimswasfunctional', models.IntegerField(default=0)),
                ('totalsamplescurrentandcarryoverplasma', models.IntegerField(default=0)),
                ('totalsamplescurrentandcarryoverdbs', models.IntegerField(default=0)),
                ('samplesrefferedplasma', models.IntegerField(default=0)),
                ('samplesreffereddbs', models.IntegerField(default=0)),
                ('labsamplesrefferedto', models.IntegerField(default=0)),
                ('percentagerejectionrateplasma', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentagerejectionratedbs', models.DecimalField(decimal_places=5, max_digits=5)),
                ('numberofresultsprintedfromlimsplasma', models.IntegerField(default=0)),
                ('numberofresultsprintedfromlimsdbs', models.IntegerField(default=0)),
                ('totalresultsdispatchedbylabplasma', models.IntegerField(default=0)),
                ('totalresultsdispatchedbylabdbs', models.IntegerField(default=0)),
                ('totalresultsdispatchedbylabviasmsplasma', models.IntegerField(default=0)),
                ('totalresultsdispatchedbylabviasmsdbs', models.IntegerField(default=0)),
                ('reasonsforrejectionssamplequalitycompromisedplasma', models.IntegerField(default=0)),
                ('reasonsforrejectionssamplequalitycompromiseddbs', models.IntegerField(default=0)),
                ('reasons6', models.IntegerField(default=0)),
                ('reasons5', models.IntegerField(default=0)),
                ('reasons2', models.IntegerField(default=0)),
                ('reasons1', models.IntegerField(default=0)),
                ('reasons4', models.IntegerField(default=0)),
                ('reasons3', models.IntegerField(default=0)),
                ('reasonsforrejectionssamplequalitycompromisedqdacheckplasma', models.IntegerField(default=0)),
                ('reasonsforrejectionssamplequalitycompromisedqdacheckdbs', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalreagentorkitstockoutplasma', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalreagentorkitstockoutdbs', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalinstrumentmechanicalfailureplasma', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalinstrumentmechanicalfailuredbs', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalinsufficientinstrumentcapacityplasma', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalinsufficientinstrumentcapacitydbs', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalinsufficienthrcapacityplasma', models.IntegerField(default=0)),
                ('reasonsforsamplerefferalinsufficienthrcapacitydbs', models.IntegerField(default=0)),
                ('reasonsforsamplerefferaldqacheckplasma', models.IntegerField(default=0)),
                ('reasonsforsamplerefferaldqacheckdbs', models.IntegerField(default=0)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
                ('comments', models.TextField(max_length=5000, null=True, verbose_name='Please input any comments regarding sample carryover, samples received, samples rejected, rejection rate, TAT, machine breakdowns & down time, reagent stock out if applicable')),
            ],
        ),
        migrations.CreateModel(
            name='specimensrunbrticovid19',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofweek', models.CharField(choices=[('NMRL', 'NMRL'), ('Mpilo', 'Mpilo'), ('BRIDH', 'BRIDH'), ('NTBRL', 'NTBRL'), ('Gweru', 'Gweru'), ('Chinhoyi', 'Chinhoyi'), ('Masvingo', 'Masvingo'), ('eid', 'eid'), ('Victoria Falls', 'Victoria Falls'), ('Bindura', 'Bindura'), ('Kadoma', 'Kadoma'), ('Marondera', 'Marondera'), ('St Lukes', 'St Lukes'), ('Gwanda', 'Gwanda'), ('Total', 'Total')], default='NMRL', max_length=5000)),
                ('testsdoneabbottrun', models.IntegerField(default=0)),
                ('testsdoneabbottfailedbuteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdoneabbottfailedbutnoteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdoneabbottrepeat', models.IntegerField(default=0)),
                ('testsdonebmxrun', models.IntegerField(default=0)),
                ('testsdonebmxfailedbuteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonebmxfailedbutnoteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonebmxrepeat', models.IntegerField(default=0)),
                ('testsdonegenexpertrun', models.IntegerField(default=0)),
                ('testsdonegenexpertfailedbuteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonegenexpertfailedbutnoteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonegenexpertrepeat', models.IntegerField(default=0)),
                ('testsdonequantstudio3run', models.IntegerField(default=0)),
                ('testsdonequantstudio3failedbuteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonequantstudio3failedbutnoteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonequantstudio3repeat', models.IntegerField(default=0)),
                ('testsdonehologicpantherrun', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedbuteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedbutnoteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonehologicpantherrepeat', models.IntegerField(default=0)),
                ('testsdonerdtabrun', models.IntegerField(default=0)),
                ('testsdonerdtabfailedbuteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonerdtabfailedbutnoteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonerdtabrepeat', models.IntegerField(default=0)),
                ('testsdonerdtagrun', models.IntegerField(default=0)),
                ('testsdonerdtagfailedbuteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonerdtagfailedbutnoteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonerdtagrepeat', models.IntegerField(default=0)),
                ('totaltestsdone', models.IntegerField(default=0)),
                ('totalrepeats', models.IntegerField(default=0)),
                ('totalpatientsrun', models.IntegerField(default=0)),
                ('errorratesabbott', models.IntegerField(default=0)),
                ('errorratesbmx', models.IntegerField(default=0)),
                ('errorratesgenexpert', models.IntegerField(default=0)),
                ('errorratesquantstudio3', models.IntegerField(default=0)),
                ('errorrateshologicpanther', models.IntegerField(default=0)),
                ('errorratesrdtab', models.IntegerField(default=0)),
                ('errorratesrdtag', models.IntegerField(default=0)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='specimensrunbrtivleid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofweek', models.CharField(choices=[('NMRL', 'NMRL'), ('Mpilo', 'Mpilo'), ('BRIDH', 'BRIDH'), ('NTBRL', 'NTBRL'), ('Gweru', 'Gweru'), ('Chinhoyi', 'Chinhoyi'), ('Masvingo', 'Masvingo'), ('EID', 'EID'), ('Victoria Falls', 'Victoria Falls'), ('Bindura', 'Bindura'), ('Kadoma', 'Kadoma'), ('Marondera', 'Marondera'), ('St Lukes', 'St Lukes'), ('Gwanda', 'Gwanda'), ('Total', 'Total')], default='NMRL', max_length=5000)),
                ('testsdonerochenumberofsamplesreceivedthisweekplasma', models.IntegerField(default=0)),
                ('testsdonerochenumberofsamplescarriedoverpreviousweeksplasma', models.IntegerField(default=0)),
                ('testsdonerochefailedbuteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdonerochefailedbutnoteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdonerocherepeatplasma', models.IntegerField(default=0)),
                ('testsdonerochefailedafterrepeattestingplasma', models.IntegerField(default=0)),
                ('testsdonerochenumberofsamplesreceivedthisweekdbs', models.IntegerField(default=0)),
                ('testsdonerochenumberofsamplescarriedoverpreviousweeksdbs', models.IntegerField(default=0)),
                ('testsdonerochefailedbuteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdonerochefailedbutnoteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdonerocherepeatdbs', models.IntegerField(default=0)),
                ('testsdonerochefailedafterrepeattestingdbs', models.IntegerField(default=0)),
                ('testsdonebmxnumberofsamplesreceivedthisweekplasma', models.IntegerField(default=0)),
                ('testsdonebmxnumberofsamplescarriedoverpreviousweeksplasma', models.IntegerField(default=0)),
                ('testsdonebmxfailedbuteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdonebmxfailedbutnoteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdonebmxrepeatplasma', models.IntegerField(default=0)),
                ('testsdonebmxfailedafterrepeattestingplasma', models.IntegerField(default=0)),
                ('testsdonebmxnumberofsamplesreceivedthisweekdbs', models.IntegerField(default=0)),
                ('testsdonebmxnumberofsamplescarriedoverpreviousweeksdbs', models.IntegerField(default=0)),
                ('testsdonebmxfailedbuteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdonebmxfailedbutnoteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdonebmxrepeatdbs', models.IntegerField(default=0)),
                ('testsdonebmxfailedafterrepeattestingdbs', models.IntegerField(default=0)),
                ('testsdoneabbottnumberofsamplesreceivedthisweekplasma', models.IntegerField(default=0)),
                ('testsdoneabbottnumberofsamplescarriedoverpreviousweeksplasma', models.IntegerField(default=0)),
                ('testsdoneabbottfailedbuteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdoneabbottfailedbutnoteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdoneabbottrepeatplasma', models.IntegerField(default=0)),
                ('testsdoneabbottfailedafterrepeattestingplasma', models.IntegerField(default=0)),
                ('testsdoneabbottnumberofsamplesreceivedthisweekdbs', models.IntegerField(default=0)),
                ('testsdoneabbottnumberofsamplescarriedoverpreviousweeksdbs', models.IntegerField(default=0)),
                ('testsdoneabbottfailedbuteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdoneabbottfailedbutnoteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdoneabbottrepeatdbs', models.IntegerField(default=0)),
                ('testsdoneabbottfailedafterrepeattestingdbs', models.IntegerField(default=0)),
                ('testsdonehologicpanthernumberofsamplesreceivedthisweekplasma', models.IntegerField(default=0)),
                ('tests2', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedbuteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedbutnoteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdonehologicpantherrepeatplasma', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedafterrepeattestingplasma', models.IntegerField(default=0)),
                ('testsdonehologicpanthernumberofsamplesreceivedthisweekdbs', models.IntegerField(default=0)),
                ('tests1', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedbuteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedbutnoteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdonehologicpantherrepeatdbs', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedafterrepeattestingdbs', models.IntegerField(default=0)),
                ('totaltestsdone', models.IntegerField(default=0)),
                ('totalrepeats', models.IntegerField(default=0)),
                ('totalpatientsrun', models.IntegerField(default=0)),
                ('targetsweekly', models.IntegerField(default=0)),
                ('percentagetargetsachievements', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorraterocheplasma', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorraterochedbs', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorratebmxplasma', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorratebmxdbs', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorrateabbottplasma', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorrateabbottdbs', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorratehologicpantherplasma', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorratehologicpantherdbs', models.DecimalField(decimal_places=5, max_digits=5)),
                ('totalncsfromaudit', models.TextField(max_length=5000, null=True)),
                ('ncsnotyetclosed', models.TextField(max_length=5000, null=True)),
                ('ncsclosedthisweek', models.TextField(max_length=5000, null=True)),
                ('totalncsfromaudit1', models.TextField(max_length=5000, null=True)),
                ('ncsnotyetclosed1', models.TextField(max_length=5000, null=True)),
                ('ncsclosedthisweek1', models.TextField(max_length=5000, null=True)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Specimensrunbrtivlweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofweek', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], default='Monday', max_length=5000)),
                ('testsdonerochenumberofsamplesreceivedthisweekplasma', models.IntegerField(default=0)),
                ('testsdonerochenumberofsamplescarriedoverpreviousweeksplasma', models.IntegerField(default=0)),
                ('testsdonerochefailedbuteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdonerochefailedbutnoteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdonerocherepeatplasma', models.IntegerField(default=0)),
                ('testsdonerochefailedafterrepeattestingplasma', models.IntegerField(default=0)),
                ('testsdonerochenumberofsamplesreceivedthisweekdbs', models.IntegerField(default=0)),
                ('testsdonerochenumberofsamplescarriedoverpreviousweeksdbs', models.IntegerField(default=0)),
                ('testsdonerochefailedbuteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdonerochefailedbutnoteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdonerocherepeatdbs', models.IntegerField(default=0)),
                ('testsdonerochefailedafterrepeattestingdbs', models.IntegerField(default=0)),
                ('testsdonebmxnumberofsamplesreceivedthisweekplasma', models.IntegerField(default=0)),
                ('testsdonebmxnumberofsamplescarriedoverpreviousweeksplasma', models.IntegerField(default=0)),
                ('testsdonebmxfailedbuteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdonebmxfailedbutnoteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdonebmxrepeatplasma', models.IntegerField(default=0)),
                ('testsdonebmxfailedafterrepeattestingplasma', models.IntegerField(default=0)),
                ('testsdonebmxnumberofsamplesreceivedthisweekdbs', models.IntegerField(default=0)),
                ('testsdonebmxnumberofsamplescarriedoverpreviousweeksdbs', models.IntegerField(default=0)),
                ('testsdonebmxfailedbuteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdonebmxfailedbutnoteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdonebmxrepeatdbs', models.IntegerField(default=0)),
                ('testsdonebmxfailedafterrepeattestingdbs', models.IntegerField(default=0)),
                ('testsdoneabbottnumberofsamplesreceivedthisweekplasma', models.IntegerField(default=0)),
                ('testsdoneabbottnumberofsamplescarriedoverpreviousweeksplasma', models.IntegerField(default=0)),
                ('testsdoneabbottfailedbuteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdoneabbottfailedbutnoteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdoneabbottrepeatplasma', models.IntegerField(default=0)),
                ('testsdoneabbottfailedafterrepeattestingplasma', models.IntegerField(default=0)),
                ('testsdoneabbottnumberofsamplesreceivedthisweekdbs', models.IntegerField(default=0)),
                ('testsdoneabbottnumberofsamplescarriedoverpreviousweeksdbs', models.IntegerField(default=0)),
                ('testsdoneabbottfailedbuteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdoneabbottfailedbutnoteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdoneabbottrepeatdbs', models.IntegerField(default=0)),
                ('testsdoneabbottfailedafterrepeattestingdbs', models.IntegerField(default=0)),
                ('testsdonehologicpanthernumberofsamplesreceivedthisweekplasma', models.IntegerField(default=0)),
                ('tests2', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedbuteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedbutnoteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdonehologicpantherrepeatplasma', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedafterrepeattestingplasma', models.IntegerField(default=0)),
                ('testsdonehologicpanthernumberofsamplesreceivedthisweekdbs', models.IntegerField(default=0)),
                ('tests1', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedbuteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedbutnoteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdonehologicpantherrepeatdbs', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedafterrepeattestingdbs', models.IntegerField(default=0)),
                ('totaltestsdone', models.IntegerField(default=0)),
                ('totalrepeats', models.IntegerField(default=0)),
                ('totalpatientsrun', models.IntegerField(default=0)),
                ('targetsweekly', models.IntegerField(default=0)),
                ('percentagetargetsachievements', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorraterocheplasma', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorraterochedbs', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorratebmxplasma', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorratebmxdbs', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorrateabbottplasma', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorrateabbottdbs', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorratehologicpantherplasma', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorratehologicpantherdbs', models.DecimalField(decimal_places=5, max_digits=5)),
                ('totalncsfromaudit', models.TextField(max_length=5000, null=True)),
                ('ncsnotyetclosed', models.TextField(max_length=5000, null=True)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Specimensrunbrtiweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofweek', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], default='Monday', max_length=5000)),
                ('testsdonerochenumberofsamplesreceivedthisweekplasma', models.IntegerField(default=0)),
                ('testsdonerochenumberofsamplescarriedoverpreviousweeksplasma', models.IntegerField(default=0)),
                ('testsdonerochefailedbuteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdonerochefailedbutnoteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdonerocherepeatplasma', models.IntegerField(default=0)),
                ('testsdonerochefailedafterrepeattestingplasma', models.IntegerField(default=0)),
                ('testsdonerochenumberofsamplesreceivedthisweekdbs', models.IntegerField(default=0)),
                ('testsdonerochenumberofsamplescarriedoverpreviousweeksdbs', models.IntegerField(default=0)),
                ('testsdonerochefailedbuteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdonerochefailedbutnoteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdonerocherepeatdbs', models.IntegerField(default=0)),
                ('testsdonerochefailedafterrepeattestingdbs', models.IntegerField(default=0)),
                ('testsdonebmxnumberofsamplesreceivedthisweekplasma', models.IntegerField(default=0)),
                ('testsdonebmxnumberofsamplescarriedoverpreviousweeksplasma', models.IntegerField(default=0)),
                ('testsdonebmxfailedbuteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdonebmxfailedbutnoteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdonebmxrepeatplasma', models.IntegerField(default=0)),
                ('testsdonebmxfailedafterrepeattestingplasma', models.IntegerField(default=0)),
                ('testsdonebmxnumberofsamplesreceivedthisweekdbs', models.IntegerField(default=0)),
                ('testsdonebmxnumberofsamplescarriedoverpreviousweeksdbs', models.IntegerField(default=0)),
                ('testsdonebmxfailedbuteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdonebmxfailedbutnoteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdonebmxrepeatdbs', models.IntegerField(default=0)),
                ('testsdonebmxfailedafterrepeattestingdbs', models.IntegerField(default=0)),
                ('testsdoneabbottnumberofsamplesreceivedthisweekplasma', models.IntegerField(default=0)),
                ('testsdoneabbottnumberofsamplescarriedoverpreviousweeksplasma', models.IntegerField(default=0)),
                ('testsdoneabbottfailedbuteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdoneabbottfailedbutnoteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdoneabbottrepeatplasma', models.IntegerField(default=0)),
                ('testsdoneabbottfailedafterrepeattestingplasma', models.IntegerField(default=0)),
                ('testsdoneabbottnumberofsamplesreceivedthisweekdbs', models.IntegerField(default=0)),
                ('testsdoneabbottnumberofsamplescarriedoverpreviousweeksdbs', models.IntegerField(default=0)),
                ('testsdoneabbottfailedbuteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdoneabbottfailedbutnoteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdoneabbottrepeatdbs', models.IntegerField(default=0)),
                ('testsdoneabbottfailedafterrepeattestingdbs', models.IntegerField(default=0)),
                ('testsdonehologicpanthernumberofsamplesreceivedthisweekplasma', models.IntegerField(default=0)),
                ('tests2', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedbuteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedbutnoteligibaleforrepeatplasma', models.IntegerField(default=0)),
                ('testsdonehologicpantherrepeatplasma', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedafterrepeattestingplasma', models.IntegerField(default=0)),
                ('testsdonehologicpanthernumberofsamplesreceivedthisweekdbs', models.IntegerField(default=0)),
                ('tests1', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedbuteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedbutnoteligibaleforrepeatdbs', models.IntegerField(default=0)),
                ('testsdonehologicpantherrepeatdbs', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedafterrepeattestingdbs', models.IntegerField(default=0)),
                ('totaltestsdone', models.IntegerField(default=0)),
                ('totalrepeats', models.IntegerField(default=0)),
                ('totalpatientsrun', models.IntegerField(default=0)),
                ('targetsweekly', models.IntegerField(default=0)),
                ('percentagetargetsachievements', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorraterocheplasma', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorraterochedbs', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorratebmxplasma', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorratebmxdbs', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorrateabbottplasma', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorrateabbottdbs', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorratehologicpantherplasma', models.DecimalField(decimal_places=5, max_digits=5)),
                ('percentageerrorratehologicpantherdbs', models.DecimalField(decimal_places=5, max_digits=5)),
                ('totalncsfromaudit', models.TextField(max_length=5000, null=True)),
                ('ncsnotyetclosed', models.TextField(max_length=5000, null=True)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Specimensruncovid19',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofweek', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], default='Monday', max_length=5000)),
                ('testsdoneabbottrun', models.IntegerField(default=0)),
                ('testsdoneabbottfailedbuteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdoneabbottfailedbutnoteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdoneabbottrepeat', models.IntegerField(default=0)),
                ('testsdonebmxrun', models.IntegerField(default=0)),
                ('testsdonebmxfailedbuteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonebmxfailedbutnoteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonebmxrepeat', models.IntegerField(default=0)),
                ('testsdonegenexpertrun', models.IntegerField(default=0)),
                ('testsdonegenexpertfailedbuteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonegenexpertfailedbutnoteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonegenexpertrepeat', models.IntegerField(default=0)),
                ('testsdonequantstudio3run', models.IntegerField(default=0)),
                ('testsdonequantstudio3failedbuteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonequantstudio3failedbutnoteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonequantstudio3repeat', models.IntegerField(default=0)),
                ('testsdonehologicpantherrun', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedbuteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonehologicpantherfailedbutnoteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonehologicpantherrepeat', models.IntegerField(default=0)),
                ('testsdonerdtabrun', models.IntegerField(default=0)),
                ('testsdonerdtabfailedbuteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonerdtabfailedbutnoteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonerdtabrepeat', models.IntegerField(default=0)),
                ('testsdonerdtagrun', models.IntegerField(default=0)),
                ('testsdonerdtagfailedbuteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonerdtagfailedbutnoteligibaleforrepeat', models.IntegerField(default=0)),
                ('testsdonerdtagrepeat', models.IntegerField(default=0)),
                ('totaltestsdone', models.IntegerField(default=0)),
                ('totalrepeats', models.IntegerField(default=0)),
                ('totalpatientsrun', models.IntegerField(default=0)),
                ('errorratesabbott', models.IntegerField(default=0)),
                ('errorratesbmx', models.IntegerField(default=0)),
                ('errorratesgenexpert', models.IntegerField(default=0)),
                ('errorratesquantstudio3', models.IntegerField(default=0)),
                ('errorrateshologicpanther', models.IntegerField(default=0)),
                ('errorratesrdtab', models.IntegerField(default=0)),
                ('errorratesrdtag', models.IntegerField(default=0)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Top3brtivlweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tatmediancollectiontopickupplasmahrs', models.CharField(default='.', max_length=5000)),
                ('tatmedianspecimenhubtovllabplasmadays', models.CharField(default='.', max_length=5000)),
                ('tatmedianintralabplasmadays', models.CharField(default='.', max_length=5000)),
                ('tatmedianresultsvllabtohubplasmadays', models.CharField(default='.', max_length=5000)),
                ('tatmedianresultshubtoclinicplasmadays', models.CharField(default='.', max_length=5000)),
                ('tatmediancollectiontopickupdbshrs', models.CharField(default='.', max_length=5000)),
                ('tatmedianspecimenhubtovllabdbsdays', models.CharField(default='.', max_length=5000)),
                ('tatmedianintralabdbsdays', models.CharField(default='.', max_length=5000)),
                ('tatmedianresultsvllabtohubdbsdays', models.CharField(default='.', max_length=5000)),
                ('tatmedianresultshubtoclinicdbsdays', models.CharField(default='.', max_length=5000)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Top3brtiweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tatmediancollectiontopickupplasmahrs', models.CharField(default='.', max_length=5000)),
                ('tatmedianspecimenhubtovllabplasmadays', models.CharField(default='.', max_length=5000)),
                ('tatmedianintralabplasmadays', models.CharField(default='.', max_length=5000)),
                ('tatmedianresultsvllabtohubplasmadays', models.CharField(default='.', max_length=5000)),
                ('tatmedianresultshubtoclinicplasmadays', models.CharField(default='.', max_length=5000)),
                ('tatmediancollectiontopickupdbshrs', models.CharField(default='.', max_length=5000)),
                ('tatmedianspecimenhubtovllabdbsdays', models.CharField(default='.', max_length=5000)),
                ('tatmedianintralabdbsdays', models.CharField(default='.', max_length=5000)),
                ('tatmedianresultsvllabtohubdbsdays', models.CharField(default='.', max_length=5000)),
                ('tatmedianresultshubtoclinicdbsdays', models.CharField(default='.', max_length=5000)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Top3covid19',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numberofdaystat1', models.CharField(default='.', max_length=5000)),
                ('numberofdaystat2', models.CharField(default='.', max_length=5000)),
                ('numberofdaystat3', models.CharField(default='.', max_length=5000)),
                ('numberofdaystattotal', models.CharField(default='.', max_length=5000)),
                ('numberofcompletedtransmittalsheetreceived', models.CharField(default='.', max_length=5000)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Top4brtivlweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machinenumberofmachinebreakdownsroche', models.CharField(default='.', max_length=5000)),
                ('machinenumberofmachinebreakdownsabbott', models.CharField(default='.', max_length=5000)),
                ('machinenumberofmachinebreakdownshologicpanther', models.CharField(default='.', max_length=5000)),
                ('machinenumberofmachinebreakdownsbmx', models.CharField(default='.', max_length=5000)),
                ('machinereasonsroche', models.CharField(default='.', max_length=5000)),
                ('machinereasonsabbott', models.CharField(default='.', max_length=5000)),
                ('machinereasonshologicpanther', models.CharField(default='.', max_length=5000)),
                ('machinereasonsbmx', models.CharField(default='.', max_length=5000)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Top4brtiweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machinenumberofmachinebreakdownsroche', models.CharField(default='.', max_length=5000)),
                ('machinenumberofmachinebreakdownsabbott', models.CharField(default='.', max_length=5000)),
                ('machinenumberofmachinebreakdownshologicpanther', models.CharField(default='.', max_length=5000)),
                ('machinenumberofmachinebreakdownsbmx', models.CharField(default='.', max_length=5000)),
                ('machinereasonsroche', models.CharField(default='.', max_length=5000)),
                ('machinereasonsabbott', models.CharField(default='.', max_length=5000)),
                ('machinereasonshologicpanther', models.CharField(default='.', max_length=5000)),
                ('machinereasonsbmx', models.CharField(default='.', max_length=5000)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Top5brtivlweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machinedowntimedaysroche', models.CharField(default='.', max_length=5000)),
                ('machinereasonsroche', models.CharField(default='.', max_length=5000)),
                ('machinetimetakenfordowntimetoberesolvedroche', models.CharField(default='.', max_length=5000)),
                ('machinedowntimedaysabbott', models.CharField(default='.', max_length=5000)),
                ('machinereasonsabbott', models.CharField(default='.', max_length=5000)),
                ('machinetimetakenfordowntimetoberesolvedabbott', models.CharField(default='.', max_length=5000)),
                ('machinedowntimedayshologicpanther', models.CharField(default='.', max_length=5000)),
                ('machinereasonshologicpanther', models.CharField(default='.', max_length=5000)),
                ('machinetimetakenfordowntimetoberesolvedhologicpanther', models.CharField(default='.', max_length=5000)),
                ('machinedowntimedaysbmx', models.CharField(default='.', max_length=5000)),
                ('machinereasonsbmx', models.CharField(default='.', max_length=5000)),
                ('machinetimetakenfordowntimetoberesolvedbmx', models.CharField(default='.', max_length=5000)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Top5brtiweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machinedowntimedaysroche', models.CharField(default='.', max_length=5000)),
                ('machinereasonsroche', models.CharField(default='.', max_length=5000)),
                ('machinetimetakenfordowntimetoberesolvedroche', models.CharField(default='.', max_length=5000)),
                ('machinedowntimedaysabbott', models.CharField(default='.', max_length=5000)),
                ('machinereasonsabbott', models.CharField(default='.', max_length=5000)),
                ('machinetimetakenfordowntimetoberesolvedabbott', models.CharField(default='.', max_length=5000)),
                ('machinedowntimedayshologicpanther', models.CharField(default='.', max_length=5000)),
                ('machinereasonshologicpanther', models.CharField(default='.', max_length=5000)),
                ('machinetimetakenfordowntimetoberesolvedhologicpanther', models.CharField(default='.', max_length=5000)),
                ('machinedowntimedaysbmx', models.CharField(default='.', max_length=5000)),
                ('machinereasonsbmx', models.CharField(default='.', max_length=5000)),
                ('machinetimetakenfordowntimetoberesolvedbmx', models.CharField(default='.', max_length=5000)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Top61brtiweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machineamountofliquidwasteroche', models.CharField(default='.', max_length=5000)),
                ('machineamountofliquidwasteabbott', models.CharField(default='.', max_length=5000)),
                ('machineamountofliquidwastehologicpanther', models.CharField(default='.', max_length=5000)),
                ('machineamountofliquidwastebmx', models.CharField(default='.', max_length=5000)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Top6brtivlweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machinestockoutdaysroche', models.CharField(default='.', max_length=5000)),
                ('machinereasonsroche', models.CharField(default='.', max_length=5000)),
                ('machinestockoutdaysabbott', models.CharField(default='.', max_length=5000)),
                ('machinereasonsabbott', models.CharField(default='.', max_length=5000)),
                ('machinestockoutdayshologicpanther', models.CharField(default='.', max_length=5000)),
                ('machinereasonshologicpanther', models.CharField(default='.', max_length=5000)),
                ('machinestockoutdaysbmx', models.CharField(default='.', max_length=5000)),
                ('machinereasonsbmx', models.CharField(default='.', max_length=5000)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Top6brtiweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machinestockoutdaysroche', models.CharField(default='.', max_length=5000)),
                ('machinereasonsroche', models.CharField(default='.', max_length=5000)),
                ('machinestockoutdaysabbott', models.CharField(default='.', max_length=5000)),
                ('machinereasonsabbott', models.CharField(default='.', max_length=5000)),
                ('machinestockoutdayshologicpanther', models.CharField(default='.', max_length=5000)),
                ('machinereasonshologicpanther', models.CharField(default='.', max_length=5000)),
                ('machinestockoutdaysbmx', models.CharField(default='.', max_length=5000)),
                ('machinereasonsbmx', models.CharField(default='.', max_length=5000)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Top7brtivlweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reagenttestsloanedouttootherlabsreagentloanedtowhichlabroche', models.CharField(default='.', max_length=5000)),
                ('reagent5', models.CharField(default='.', max_length=5000)),
                ('reagent9', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsstockonhandroche', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabstestsavailableroche', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsmonthsofstockroche', models.CharField(default='.', max_length=5000)),
                ('reagent13', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsreagentloanedtowhichlababbott', models.CharField(default='.', max_length=5000)),
                ('reagent2', models.CharField(default='.', max_length=5000)),
                ('reagent6', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsstockonhandabbott', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabstestsavailableabbott', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsmonthsofstockabbott', models.CharField(default='.', max_length=5000)),
                ('reagent10', models.CharField(default='.', max_length=5000)),
                ('reagent1', models.CharField(default='.', max_length=5000)),
                ('reagent4', models.CharField(default='.', max_length=5000)),
                ('reagent8', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsstockonhandhologicpanther', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabstestsavailablehologicpanther', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsmonthsofstockhologicpanther', models.CharField(default='.', max_length=5000)),
                ('reagent12', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsreagentloanedtowhichlabbmx', models.CharField(default='.', max_length=5000)),
                ('reagent3', models.CharField(default='.', max_length=5000)),
                ('reagent7', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsstockonhandbmx', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabstestsavailablebmx', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsmonthsofstockbmx', models.CharField(default='.', max_length=5000)),
                ('reagent11', models.CharField(default='.', max_length=5000)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Top7brtiweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reagenttestsloanedouttootherlabsreagentloanedtowhichlabroche', models.CharField(default='.', max_length=5000)),
                ('reagent5', models.CharField(default='.', max_length=5000)),
                ('reagent9', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsstockonhandroche', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabstestsavailableroche', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsmonthsofstockroche', models.CharField(default='.', max_length=5000)),
                ('reagent13', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsreagentloanedtowhichlababbott', models.CharField(default='.', max_length=5000)),
                ('reagent2', models.CharField(default='.', max_length=5000)),
                ('reagent6', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsstockonhandabbott', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabstestsavailableabbott', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsmonthsofstockabbott', models.CharField(default='.', max_length=5000)),
                ('reagent10', models.CharField(default='.', max_length=5000)),
                ('reagent1', models.CharField(default='.', max_length=5000)),
                ('reagent4', models.CharField(default='.', max_length=5000)),
                ('reagent8', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsstockonhandhologicpanther', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabstestsavailablehologicpanther', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsmonthsofstockhologicpanther', models.CharField(default='.', max_length=5000)),
                ('reagent12', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsreagentloanedtowhichlabbmx', models.CharField(default='.', max_length=5000)),
                ('reagent3', models.CharField(default='.', max_length=5000)),
                ('reagent7', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsstockonhandbmx', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabstestsavailablebmx', models.CharField(default='.', max_length=5000)),
                ('reagenttestsloanedouttootherlabsmonthsofstockbmx', models.CharField(default='.', max_length=5000)),
                ('reagent11', models.CharField(default='.', max_length=5000)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Topagesexdissagregationofallspecimensreceivedbrtivlweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agemalelessthan15', models.CharField(default='.', max_length=5000)),
                ('agefemalenonpbfwlessthan15', models.CharField(default='.', max_length=5000)),
                ('agefemalepbfwlessthan15', models.CharField(default='.', max_length=5000)),
                ('ageunknownlessthan15', models.CharField(default='.', max_length=5000)),
                ('agetotallessthan15', models.CharField(default='.', max_length=5000)),
                ('agemale15to19', models.CharField(default='.', max_length=5000)),
                ('agefemalenonpbfw15to19', models.CharField(default='.', max_length=5000)),
                ('agefemalepbfw15to19', models.CharField(default='.', max_length=5000)),
                ('ageunknown15to19', models.CharField(default='.', max_length=5000)),
                ('agetotal15to19', models.CharField(default='.', max_length=5000)),
                ('agemale20to24', models.CharField(default='.', max_length=5000)),
                ('agefemalenonpbfw20to24', models.CharField(default='.', max_length=5000)),
                ('agefemalepbfw20to24', models.CharField(default='.', max_length=5000)),
                ('ageunknown20to24', models.CharField(default='.', max_length=5000)),
                ('agetotal20to24', models.CharField(default='.', max_length=5000)),
                ('agemale25to49', models.CharField(default='.', max_length=5000)),
                ('agefemalenonpbfw25to49', models.CharField(default='.', max_length=5000)),
                ('agefemalepbfw25to49', models.CharField(default='.', max_length=5000)),
                ('ageunknown25to49', models.CharField(default='.', max_length=5000)),
                ('agetotal25to49', models.CharField(default='.', max_length=5000)),
                ('agemale50plus', models.CharField(default='.', max_length=5000)),
                ('agefemalenonpbfw50plus', models.CharField(default='.', max_length=5000)),
                ('agefemalepbfw50plus', models.CharField(default='.', max_length=5000)),
                ('ageunknown50plus', models.CharField(default='.', max_length=5000)),
                ('agetotal50plus', models.CharField(default='.', max_length=5000)),
                ('agemaleunknown', models.CharField(default='.', max_length=5000)),
                ('agefemalenonpbfwunknown', models.CharField(default='.', max_length=5000)),
                ('agefemalepbfwunknown', models.CharField(default='.', max_length=5000)),
                ('ageunknownunknown', models.CharField(default='.', max_length=5000)),
                ('agetotalunknown', models.CharField(default='.', max_length=5000)),
                ('agemaletotals', models.CharField(default='.', max_length=5000)),
                ('agefemalenonpbfwtotals', models.CharField(default='.', max_length=5000)),
                ('agefemalepbfwtotals', models.CharField(default='.', max_length=5000)),
                ('ageunknowntotals', models.CharField(default='.', max_length=5000)),
                ('agetotaltotals', models.CharField(default='.', max_length=5000)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Topagesexdissagregationofallspecimensreceivedbrtiweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agemalelessthan15', models.CharField(default='.', max_length=5000)),
                ('agefemalenonpbfwlessthan15', models.CharField(default='.', max_length=5000)),
                ('agefemalepbfwlessthan15', models.CharField(default='.', max_length=5000)),
                ('ageunknownlessthan15', models.CharField(default='.', max_length=5000)),
                ('agetotallessthan15', models.CharField(default='.', max_length=5000)),
                ('agemale15to19', models.CharField(default='.', max_length=5000)),
                ('agefemalenonpbfw15to19', models.CharField(default='.', max_length=5000)),
                ('agefemalepbfw15to19', models.CharField(default='.', max_length=5000)),
                ('ageunknown15to19', models.CharField(default='.', max_length=5000)),
                ('agetotal15to19', models.CharField(default='.', max_length=5000)),
                ('agemale20to24', models.CharField(default='.', max_length=5000)),
                ('agefemalenonpbfw20to24', models.CharField(default='.', max_length=5000)),
                ('agefemalepbfw20to24', models.CharField(default='.', max_length=5000)),
                ('ageunknown20to24', models.CharField(default='.', max_length=5000)),
                ('agetotal20to24', models.CharField(default='.', max_length=5000)),
                ('agemale25to49', models.CharField(default='.', max_length=5000)),
                ('agefemalenonpbfw25to49', models.CharField(default='.', max_length=5000)),
                ('agefemalepbfw25to49', models.CharField(default='.', max_length=5000)),
                ('ageunknown25to49', models.CharField(default='.', max_length=5000)),
                ('agetotal25to49', models.CharField(default='.', max_length=5000)),
                ('agemale50plus', models.CharField(default='.', max_length=5000)),
                ('agefemalenonpbfw50plus', models.CharField(default='.', max_length=5000)),
                ('agefemalepbfw50plus', models.CharField(default='.', max_length=5000)),
                ('ageunknown50plus', models.CharField(default='.', max_length=5000)),
                ('agetotal50plus', models.CharField(default='.', max_length=5000)),
                ('agemaleunknown', models.CharField(default='.', max_length=5000)),
                ('agefemalenonpbfwunknown', models.CharField(default='.', max_length=5000)),
                ('agefemalepbfwunknown', models.CharField(default='.', max_length=5000)),
                ('ageunknownunknown', models.CharField(default='.', max_length=5000)),
                ('agetotalunknown', models.CharField(default='.', max_length=5000)),
                ('agemaletotals', models.CharField(default='.', max_length=5000)),
                ('agefemalenonpbfwtotals', models.CharField(default='.', max_length=5000)),
                ('agefemalepbfwtotals', models.CharField(default='.', max_length=5000)),
                ('ageunknowntotals', models.CharField(default='.', max_length=5000)),
                ('agetotaltotals', models.CharField(default='.', max_length=5000)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Topagesexdissagregationofallspecimensreceivedcovid19',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machinenumberofmachinebreakdownsabbott', models.CharField(default='.', max_length=5000)),
                ('machinereasonsabbott', models.CharField(default='.', max_length=5000)),
                ('machinedowntimedaysabbott', models.CharField(default='.', max_length=5000)),
                ('machinereasons2abbott', models.CharField(default='.', max_length=5000)),
                ('machinestockoutdaysabbott', models.CharField(default='.', max_length=5000)),
                ('machinereasons3abbott', models.CharField(default='.', max_length=5000)),
                ('machinenumberofmachinebreakdownsgenexpert', models.CharField(default='.', max_length=5000)),
                ('machinereasonsgenexpert', models.CharField(default='.', max_length=5000)),
                ('machinedowntimedaysgenexpert', models.CharField(default='.', max_length=5000)),
                ('machinereasons2genexpert', models.CharField(default='.', max_length=5000)),
                ('machinestockoutdaysgenexpert', models.CharField(default='.', max_length=5000)),
                ('machinereasons3genexpert', models.CharField(default='.', max_length=5000)),
                ('machinenumberofmachinebreakdownsroche', models.CharField(default='.', max_length=5000)),
                ('machinereasonsroche', models.CharField(default='.', max_length=5000)),
                ('machinedowntimedaysroche', models.CharField(default='.', max_length=5000)),
                ('machinereasons2roche', models.CharField(default='.', max_length=5000)),
                ('machinestockoutdaysroche', models.CharField(default='.', max_length=5000)),
                ('machinereasons3roche', models.CharField(default='.', max_length=5000)),
                ('machinenumberofmachinebreakdownsbmx', models.CharField(default='.', max_length=5000)),
                ('machinereasonsbmx', models.CharField(default='.', max_length=5000)),
                ('machinedowntimedaysbmx', models.CharField(default='.', max_length=5000)),
                ('machinereasons2bmx', models.CharField(default='.', max_length=5000)),
                ('machinestockoutdaysbmx', models.CharField(default='.', max_length=5000)),
                ('machinereasons3bmx', models.CharField(default='.', max_length=5000)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Topbrtivlweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reportingweek', models.CharField(default='.', max_length=5000)),
                ('month', models.CharField(default='.', max_length=5000)),
                ('laboratory', models.CharField(default='.', max_length=5000)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Topbrtiweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reportingweek', models.CharField(default='.', max_length=5000)),
                ('month', models.CharField(default='.', max_length=5000)),
                ('laboratory', models.CharField(default='.', max_length=5000)),
                ('user', models.CharField(default='root', max_length=5000)),
                ('lab', models.CharField(default='brti', max_length=5000)),
            ],
        ),
    ]
